#!/bin/sh
#
#   Install script for SSH end-user client kit.
#   Installs ./bin, ./man, and ./etc to
#       $BINDIR, $MANDIR, and $HOME/.ssh.
#   Script tested under:
#        Solaris 2.8
#   -- VRS 19980416  <staatsvr@asc.hpc.mil> first ssh version
#   -- VRS 19980813  last regular/commercial ssh version
#   -- VRS 20020327  first openssh version (3.1p1a); use relative paths
#   -- VRS 20081007  add backup of user .ssh/ssh_config for abennett@arsc.edu
#

tellusage()
{
    echo "usage:  "`basename $0`" [-h] [-f]" 1>&2
    echo "        -h    help"
    echo "        -f    answer 'yes' to all options"
    echo " "
    cat README*
    exit 1;
}

do_install()
{
    if [ x"$BINDIR" != "x" -a x"$BINDIR" != "x/dev/null" ]; then
        if [ ! -d $BINDIR ];   then  mkdir $BINDIR;   chmod 755 $BINDIR;   fi
        echo "Copying ./bin/* to $BINDIR..."
        (cd bin; tar cf - ./*  | (cd ..; cd $BINDIR; $tarX -))
    fi

    if [ x"$MANDIR" != "x" -a x"$MANDIR" != "x/dev/null" ]; then
        if [ ! -d $MANDIR ];   then  mkdir $MANDIR;   chmod 755 $MANDIR;   fi
        echo "Copying ./man/* to $MANDIR..."
        (cd man; tar cf - ./*  | (cd ..; cd $MANDIR; $tarX -))
    fi

    if [ x"$ETCDIR" != "x" -a x"$ETCDIR" != "x/dev/null" ]; then
        if [ ! -d $ETCDIR ];   then  mkdir $ETCDIR;   chmod 755 $ETCDIR;   fi
        if [ -f $ETCDIR/ssh_config ]; then
            backup=`date "+%Y%m%d_%H%M%S"`
            echo "Backing up $ETCDIR/ssh_config"
            echo "        to $ETCDIR/ssh_config.$backup"
            cp $ETCDIR/ssh_config $ETCDIR/ssh_config.$backup
        fi
        if [ -f $ETCDIR/config ]; then
            backup=`date "+%Y%m%d_%H%M%S"`
            echo "Backing up $ETCDIR/config"
            echo "        to $ETCDIR/config.$backup"
            cp $ETCDIR/config $ETCDIR/config.$backup
        fi
        echo "Copying ./etc/* to $ETCDIR..."
        (cd etc; tar cf - ./*  | (cd ..; cd $ETCDIR; $tarX -))
    fi
}


find_writable()
{
    list=`echo $2 | sed -e 's/:/ /g'`
    for dir in $list /dev/null
    do
        if [ $dir = "." -o $dir = ".." ]; then continue; fi
        if [ -d $dir -a -w $dir ];        then break; fi
    done
    eval $1=$dir
}


echo_nl1()
{
    echo "$1\c"
}

echo_nl2()
{
    echo -n "$1"
}


#  main() starts here.
#
#  You may change $BINDIR, $ETCDIR, and $MANDIR to choose your own
#  installation directories.  Note that the executables in ./bin
#  have all been modified to use relative paths.  For example, scp
#  will find the first ssh in your current $PATH rather than using
#  its normal hardwired absolute path.


#  Customize for operating system
#    Select echo-no-linefeed: -n vs \c
#    Select tar-extract-opts: xvopf vs xvpf
#
uname=`uname`
if [ x"$uname" = "xLinux"  -o  x"$uname" = "xopenbsd" ]; then
    echo_nl=echo_nl2
    tarX="tar xvpf"
else
    echo_nl=echo_nl1
    tarX="tar xvopf"
fi


Interactive=1

while test $# -ne 0
do
    case $1 in
    -[fF])  Interactive=0;;
    *)  tellusage;;
    esac

    shift

done

FALLMAN="$HOME/.ssh/man"
MANPATH="$MANPATH:/usr/local/man"
BINPATH="$HOME/bin/$CPU:$HOME/bin:$PATH:/usr/local/bin"
if [ x"$BINDIR" != "x" ];  then BINPATH="$BINDIR:$BINPATH";  fi
if [ x"$MANDIR" != "x" ];  then MANPATH="$MANDIR:$MANPATH";  fi

find_writable BINDIR "$BINPATH"
find_writable MANDIR "$MANPATH"

if [ x"$ETCDIR" = "x"  -o  x"$ETCDIR" = "x/dev/null" ];  then
    ETCDIR="$HOME/.ssh";
fi
if [ x"$BINDIR" = "x"  -o  x"$BINDIR" = "x/dev/null" ];  then
    echo `basename $0`": no writable directory in $BINPATH for ./bin"
    exit 1
fi
if [ x"$MANDIR" = "x"  -o  x"$MANDIR" = "x/dev/null" ];  then
    mkdir -m 0755 $FALLMAN
    find_writable MANDIR "$FALLMAN"
    if [ x"$MANDIR" = "x"  -o  x"$MANDIR" = "x/dev/null" ];  then
        echo `basename $0`": no writable directory in $MANPATH for ./man"
    fi
fi

echo " "
echo `basename $0` "will copy:"
echo "  ./bin/*  to $BINDIR"
echo "  ./man/*  to $MANDIR"
echo "  ./etc/*  to $ETCDIR"
if [ $Interactive != 0 ]; then
    $echo_nl "OK? [y/N]: "
    read ans
else
    ans="Y"
fi
case "$ans" in
[yY]*)  do_install;;
esac

exit 0;

